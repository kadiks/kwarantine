{"version":3,"file":"static/webpack/static/development/pages/match.js.782dddfede69a52a2be9.hot-update.js","sources":["webpack:///./src/components/match/Scoreboard.js"],"sourcesContent":["import { Avatar } from '../player';\nimport { Countdown } from '../core/loader';\n\nexport default ({ game, screenInfo } = {}) => {\n  const { results } = screenInfo;\n  const playerIds = Object.keys(results);\n  const resultsArr = playerIds.map((playerId) => {\n    return {\n      playerId,\n      answer: results[playerId].answer,\n      score: results[playerId].score,\n      name: results[playerId].name,\n    };\n  });\n  resultsArr.sort((a, b) => {\n    return b.score - a.score;\n  });\n  return (\n    <div className=\"row\">\n      <div className=\"col-10\">\n        <h2>Classement intermédiaire</h2>\n      </div>\n      <div className=\"col-2\">\n        <Countdown duration={10} />\n      </div>\n      <table className=\"table table-striped\">\n        <thead>\n          <th>N°</th>\n          <th>Joueu.r.se</th>\n          <th>Réponse</th>\n          <th>Points</th>\n        </thead>\n        <tbody>\n          {resultsArr.map(({ playerId, answer, score }, index) => {\n            const styles = {};\n            if (playerId === game.playerId) {\n              styles.backgroundColor = 'black';\n              styles.color = 'white';\n            }\n            return (\n              <tr key={playerId}>\n                <td style={styles}>{index + 1}</td>\n                <td style={styles}>\n                  <Avatar playerId={playerId} size=\"small\" />\n                </td>\n                <td style={styles}>{answer}</td>\n                <td style={styles}>{score}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;;;;A","sourceRoot":""}