{"version":3,"file":"static/webpack/static/development/pages/match.js.62e1b159c4e0a3ce4ecc.hot-update.js","sources":["webpack:///./pages/match/index.js"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport Config from '../../src/Config';\nimport { Header, Body } from '../../src/components/core/text';\nimport {\n  ButtonGroup,\n  Basic as Button,\n  Link as ButtonLink,\n} from '../../src/components/core/button';\nimport { NavBar, Footer } from '../../src/components/navigation';\nimport { Avatar } from '../../src/components/player';\nimport { Timer } from '../../src/components/match';\nimport Match from '../../src/components/MatchComp';\n\nimport styles from '../../src/utils/styles';\nimport Icon from '../../src/components/core/Icon';\n\nimport MatchConnect from '../../src/utils/MatchConnect';\n\nclass MatchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.matchConnect = new MatchConnect().getInstance();\n\n    this.state = {\n      game: null,\n      screen: 'loading',\n      duration: 0,\n      screenInfo: null,\n      roundNumber: 0,\n    };\n\n    this.startRound = this.startRound.bind(this);\n  }\n\n  async componentDidMount() {\n    // const gameData = {\n    //   name: 'LongestWord',\n    //   data: {\n    //     letters: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\n    //   },\n    // };\n    // console.log('#cmpDM');\n    const evts = kwa.constants.cEvents;\n    await this.matchConnect.connect();\n    // TODO: chain events?\n    this.matchConnect.on(evts.MATCH_WAITROOM, (room) => {\n      console.log('pages/match#cmDM evts.MATCH_WAITROOM room', room);\n      this.setState({\n        screen: 'waitRoom',\n        screenInfo: {\n          playerId: this.matchConnect.playerId,\n          ...room,\n        },\n      });\n    });\n    this.matchConnect.on(evts.MATCH_NEXT_ROUND, this.startRound);\n    // this.matchConnect.on('match.next.round', this.startRound);\n\n    this.matchConnect.on(evts.MATCH_END, (results) => {\n      this.setState({\n        screen: 'lastScoreboard',\n        screenInfo: results,\n      }, () => {\n        this.matchConnect.socket.disconnect();\n      });\n    });\n\n    this.matchConnect.on(evts.GAME_WAIT, () => {\n      this.setState({\n        screen: 'waitForOthers',\n        screenInfo: null,\n      });\n    });\n\n    this.matchConnect.on(evts.MATCH_MID_SCOREBOARD, (results) => {\n      this.setState({\n        screen: 'scoreboard',\n        screenInfo: results,\n      });\n    });\n    this.matchConnect.on(evts.GAME_PREPARE, (instructions) => {\n      this.setState({\n        screen: 'gameTitle',\n        screenInfo: instructions,\n      });\n    });\n    this.matchConnect.on(evts.GAME_PRESENTATION, (playerIds) => {\n      this.setState({\n        screen: 'gamePresentation',\n        screenInfo: {\n          playerId: this.matchConnect.playerId,\n          ...playerIds,\n        },\n      });\n    });\n  }\n\n  startRound(round) {\n    // console.log('pages/match#startRound round', round);\n    // console.log(\n    //   'pages/match#startRound this.matchConnect.playerId',\n    //   this.matchConnect.playerId\n    // );\n    if (this.state.game !== null) {\n      this.state.game.removeEvents();\n    }\n    this.setState(\n      {\n        game: new kwa.games[round.className]({\n          ...round.data,\n          playerId: this.matchConnect.playerId,\n          socket: this.matchConnect.socket, // might not be needed...\n        }),\n        duration: round.data.duration,\n        screen: 'game',\n        roundNumber: this.state.roundNumber + 1,\n      },\n      () => {\n        this.state.game.attachEvents();\n        this.state.game.on(kwa.constants.events.GAME_STATE_UPDATED, () => {\n          //   console.log('state has been updated', state);\n          this.setState({\n            screen: 'game',\n          });\n        });\n      }\n    );\n  }\n\n  render() {\n    // console.log('pages/match#render');\n    const { game, screen, screenInfo, roundNumber } = this.state;\n    console.log('pages/match#render screen', screen);\n    console.log('pages/match#render screenInfo', screenInfo);\n    return (\n      <div className=\"container\">\n        <div className=\"kwa-game-container\">\n          <Match\n            game={game}\n            screen={screen}\n            screenInfo={screenInfo}\n            roundNumber={roundNumber}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MatchPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAZA;AAaA;AACA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAJA;AAKA;AACA;AACA;AARA;AAWA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAhIA;AACA;AAkIA;;;;A","sourceRoot":""}