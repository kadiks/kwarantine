{"ast":null,"code":"var _jsxFileName = \"/Users/jenaic/Desktop/kryptonik/projects/projects/socialacoeur/kwarantine/client/src/components/core/text/Body.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from '../../../utils/styles';\n\nconst Body = ({\n  children,\n  size = 'md',\n  bold,\n  color = null,\n  isInline = false,\n  style = {}\n}) => {\n  const fontSize = styles.size.font.body[size];\n  const fontColor = color ? color : styles.color.body;\n  const display = isInline ? 'inline' : 'block';\n\n  const compStyle = _objectSpread({\n    fontFamily: styles.font.name.body,\n    fontWeight: 300,\n    color: fontColor,\n    display,\n    fontSize\n  }, style);\n\n  if (bold === true) {\n    compStyle.fontWeight = 'bold';\n  }\n\n  return __jsx(\"p\", {\n    style: compStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default Body;","map":{"version":3,"sources":["/Users/jenaic/Desktop/kryptonik/projects/projects/socialacoeur/kwarantine/client/src/components/core/text/Body.js"],"names":["React","styles","Body","children","size","bold","color","isInline","style","fontSize","font","body","fontColor","display","compStyle","fontFamily","name","fontWeight"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACVC,EAAAA,QADU;AAEVC,EAAAA,IAAI,GAAG,IAFG;AAGVC,EAAAA,IAHU;AAIVC,EAAAA,KAAK,GAAG,IAJE;AAKVC,EAAAA,QAAQ,GAAG,KALD;AAMVC,EAAAA,KAAK,GAAG;AANE,CAAD,KAOP;AACF,QAAMC,QAAQ,GAAGR,MAAM,CAACG,IAAP,CAAYM,IAAZ,CAAiBC,IAAjB,CAAsBP,IAAtB,CAAjB;AACA,QAAMQ,SAAS,GAAGN,KAAK,GACnBA,KADmB,GAEnBL,MAAM,CAACK,KAAP,CAAaK,IAFjB;AAGA,QAAME,OAAO,GAAGN,QAAQ,GACpB,QADoB,GAEpB,OAFJ;;AAGA,QAAMO,SAAS;AACXC,IAAAA,UAAU,EAAEd,MAAM,CAACS,IAAP,CAAYM,IAAZ,CAAiBL,IADlB;AAEXM,IAAAA,UAAU,EAAE,GAFD;AAGXX,IAAAA,KAAK,EAAEM,SAHI;AAIXC,IAAAA,OAJW;AAKXJ,IAAAA;AALW,KAMRD,KANQ,CAAf;;AAQA,MAAIH,IAAI,KAAK,IAAb,EAAmB;AACfS,IAAAA,SAAS,CAACG,UAAV,GAAuB,MAAvB;AACH;;AACD,SACI;AAAG,IAAA,KAAK,EAAEH,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,QADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeD,IAAf","sourcesContent":["import React from 'react';\n\nimport styles from '../../../utils/styles';\n\nconst Body = ({\n    children,\n    size = 'md',\n    bold,\n    color = null,\n    isInline = false,\n    style = {}\n}) => {\n    const fontSize = styles.size.font.body[size];\n    const fontColor = color ?\n        color :\n        styles.color.body;\n    const display = isInline ?\n        'inline' :\n        'block';\n    const compStyle = {\n        fontFamily: styles.font.name.body,\n        fontWeight: 300,\n        color: fontColor,\n        display,\n        fontSize,\n        ...style\n    };\n    if (bold === true) {\n        compStyle.fontWeight = 'bold';\n    }\n    return (\n        <p style={compStyle}>\n            {children}\n        </p>\n    );\n};\n\nexport default Body;"]},"metadata":{},"sourceType":"module"}