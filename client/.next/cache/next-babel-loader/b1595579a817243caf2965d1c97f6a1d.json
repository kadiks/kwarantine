{"ast":null,"code":"var _jsxFileName = \"/Users/jenaic/Desktop/kryptonik/projects/projects/socialacoeur/kwarantine/client/src/components/core/text/Header.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from '../../../utils/styles';\n\nconst Header = ({\n  children,\n  size = 'md',\n  color = null,\n  isInline = false\n}) => {\n  const fontSize = styles.size.font.header[size];\n  const fontColor = color ? color : styles.color.primary;\n  const display = isInline ? 'inline' : 'block';\n  return __jsx(\"p\", {\n    className: \"text-header\",\n    style: {\n      fontFamily: styles.font.name.header,\n      color: fontColor,\n      fontWeight: 'bold',\n      display,\n      fontSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/jenaic/Desktop/kryptonik/projects/projects/socialacoeur/kwarantine/client/src/components/core/text/Header.js"],"names":["React","styles","Header","children","size","color","isInline","fontSize","font","header","fontColor","primary","display","fontFamily","name","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,QADY;AAEZC,EAAAA,IAAI,GAAG,IAFK;AAGZC,EAAAA,KAAK,GAAG,IAHI;AAIZC,EAAAA,QAAQ,GAAG;AAJC,CAAD,KAKT;AACF,QAAMC,QAAQ,GAAGN,MAAM,CAACG,IAAP,CAAYI,IAAZ,CAAiBC,MAAjB,CAAwBL,IAAxB,CAAjB;AACA,QAAMM,SAAS,GAAGL,KAAK,GACnBA,KADmB,GAEnBJ,MAAM,CAACI,KAAP,CAAaM,OAFjB;AAGA,QAAMC,OAAO,GAAGN,QAAQ,GACpB,QADoB,GAEpB,OAFJ;AAGA,SACI;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,KAAK,EAAE;AACHO,MAAAA,UAAU,EAAEZ,MAAM,CAACO,IAAP,CAAYM,IAAZ,CAAiBL,MAD1B;AAEHJ,MAAAA,KAAK,EAAEK,SAFJ;AAGHK,MAAAA,UAAU,EAAE,MAHT;AAIHH,MAAAA,OAJG;AAKHL,MAAAA;AALG,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKJ,QATL,CADJ;AAaH,CA1BD;;AA4BA,eAAeD,MAAf","sourcesContent":["import React from 'react';\n\nimport styles from '../../../utils/styles';\n\nconst Header = ({\n    children,\n    size = 'md',\n    color = null,\n    isInline = false\n}) => {\n    const fontSize = styles.size.font.header[size];\n    const fontColor = color ?\n        color :\n        styles.color.primary;\n    const display = isInline ?\n        'inline' :\n        'block';\n    return (\n        <p\n            className=\"text-header\"\n            style={{\n                fontFamily: styles.font.name.header,\n                color: fontColor,\n                fontWeight: 'bold',\n                display,\n                fontSize\n            }}>\n            {children}\n        </p>\n    );\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}